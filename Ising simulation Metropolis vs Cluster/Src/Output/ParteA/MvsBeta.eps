%!PS-Adobe-2.0 EPSF-2.0
%%Title: MvsBeta.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sat Jun  2 11:37:59 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 560 248
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 7.500 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (MvsBeta.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (xaceruntu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Jun  2 11:37:59 2012)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 560 50 lineto 560 248 lineto 50 248 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
780 640 M
9063 0 V
stroke
LTb
780 640 M
63 0 V
stroke
660 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
780 1251 M
9063 0 V
stroke
LTb
780 1251 M
63 0 V
stroke
660 1251 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.2)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
780 1863 M
9063 0 V
stroke
LTb
780 1863 M
63 0 V
stroke
660 1863 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.4)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
780 2474 M
9063 0 V
stroke
LTb
780 2474 M
63 0 V
stroke
660 2474 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.6)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
780 3085 M
9063 0 V
stroke
LTb
780 3085 M
63 0 V
stroke
660 3085 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.8)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
780 3696 M
9063 0 V
stroke
LTb
780 3696 M
63 0 V
stroke
660 3696 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
780 640 M
0 3087 V
stroke
LTb
780 640 M
0 63 V
stroke
780 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.1)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
1988 640 M
0 2624 V
0 400 R
0 63 V
stroke
LTb
1988 640 M
0 63 V
stroke
1988 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.2)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3197 640 M
0 3087 V
stroke
LTb
3197 640 M
0 63 V
stroke
3197 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.3)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4405 640 M
0 3087 V
stroke
LTb
4405 640 M
0 63 V
stroke
4405 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.4)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5614 640 M
0 3087 V
stroke
LTb
5614 640 M
0 63 V
stroke
5614 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.5)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6822 640 M
0 3087 V
stroke
LTb
6822 640 M
0 63 V
stroke
6822 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.6)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
8030 640 M
0 3087 V
stroke
LTb
8030 640 M
0 63 V
stroke
8030 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.7)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
9239 640 M
0 3087 V
stroke
LTb
9239 640 M
0 63 V
stroke
9239 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.8)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
LCb setrgbcolor
780 640 M
9063 0 V
stroke
LTb
780 3727 N
780 640 L
9063 0 V
0 3087 V
-9063 0 V
Z stroke
LCb setrgbcolor
260 2183 M
[ [(Times-Italic) 280.0 0.0 true true 0 (<|M|>)]
] -93.3 MCshow
LTb
LCb setrgbcolor
5311 140 M
[ [(Symbol) 280.0 0.0 true true 0 (b)]
] -93.3 MCshow
LTb
1.450 UP
1.000 UL
LTb
% Begin plot #1
1.450 UP
2.200 UL
LT0
LC2 setrgbcolor
LCb setrgbcolor
1740 3564 M
[ [(Helvetica) 200.0 0.0 true true 0 (L = 100)]
] -66.7 MRshow
LT0
LC2 setrgbcolor
1860 3564 M
571 0 V
-571 31 R
0 -62 V
571 62 R
0 -62 V
866 643 M
-31 0 R
62 0 V
-62 0 R
62 0 V
79 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
80 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
79 1 R
-31 0 R
62 0 V
-62 0 R
62 0 V
79 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
79 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
80 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
79 1 R
-31 0 R
62 0 V
-62 0 R
62 0 V
79 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
79 0 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
80 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
79 0 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
79 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
80 0 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
79 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
79 1 R
-31 0 R
62 0 V
-62 0 R
62 0 V
79 1 R
-31 0 R
62 0 V
-62 0 R
62 0 V
80 1 R
-31 0 R
62 0 V
-62 0 R
62 0 V
79 1 R
-31 0 R
62 0 V
-62 0 R
62 0 V
79 1 R
-31 0 R
62 0 V
stroke 2992 653 M
-62 0 R
62 0 V
79 2 R
-31 0 R
62 0 V
-62 0 R
62 0 V
80 1 R
-31 0 R
62 0 V
-62 0 R
62 0 V
79 2 R
-31 0 R
62 0 V
-62 0 R
62 0 V
79 2 R
-31 0 R
62 0 V
-62 0 R
62 0 V
79 3 R
-31 0 R
62 0 V
-62 0 R
62 0 V
80 3 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
79 3 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
79 5 R
-31 0 R
62 0 V
-62 0 R
62 0 V
80 6 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
79 7 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
79 10 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
88 18 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
-1 5 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
-1 4 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
-1 7 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
0 6 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
-1 11 R
0 3 V
-31 -3 R
62 0 V
-62 3 R
62 0 V
-1 7 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
stroke 4505 775 M
-1 12 R
0 3 V
-31 -3 R
62 0 V
-62 3 R
62 0 V
-1 15 R
0 3 V
-31 -3 R
62 0 V
-62 3 R
62 0 V
0 12 R
0 4 V
-31 -4 R
62 0 V
-62 4 R
62 0 V
-1 27 R
0 5 V
-31 -5 R
62 0 V
-62 5 R
62 0 V
-1 27 R
0 5 V
-31 -5 R
62 0 V
-62 5 R
62 0 V
-1 21 R
0 6 V
-31 -6 R
62 0 V
-62 6 R
62 0 V
-1 49 R
0 7 V
-31 -7 R
62 0 V
-62 7 R
62 0 V
0 68 R
0 10 V
-31 -10 R
62 0 V
-62 10 R
62 0 V
-1 55 R
0 13 V
-31 -13 R
62 0 V
-62 13 R
62 0 V
-1 130 R
0 16 V
-31 -16 R
62 0 V
-62 16 R
62 0 V
-1 166 R
0 21 V
-31 -21 R
62 0 V
-62 21 R
62 0 V
-1 199 R
0 22 V
-31 -22 R
62 0 V
-62 22 R
62 0 V
0 328 R
0 26 V
-31 -26 R
62 0 V
-62 26 R
62 0 V
-1 369 R
0 19 V
-31 -19 R
62 0 V
-62 19 R
62 0 V
-1 176 R
0 15 V
-31 -15 R
62 0 V
-62 15 R
62 0 V
-1 182 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
-1 97 R
0 7 V
-31 -7 R
62 0 V
-62 7 R
62 0 V
0 54 R
0 5 V
stroke 5018 2957 M
-31 -5 R
62 0 V
-62 5 R
62 0 V
-1 56 R
0 5 V
-31 -5 R
62 0 V
-62 5 R
62 0 V
-1 36 R
0 4 V
-31 -4 R
62 0 V
-62 4 R
62 0 V
-1 45 R
0 4 V
-31 -4 R
62 0 V
-62 4 R
62 0 V
0 32 R
0 3 V
-31 -3 R
62 0 V
-62 3 R
62 0 V
-1 33 R
0 3 V
-31 -3 R
62 0 V
-62 3 R
62 0 V
-1 18 R
0 3 V
-31 -3 R
62 0 V
-62 3 R
62 0 V
-1 28 R
0 3 V
-31 -3 R
62 0 V
-62 3 R
62 0 V
-1 17 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
0 20 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
-1 20 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
-1 18 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
-1 13 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
-1 15 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
0 14 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
-1 12 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
-1 10 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
198 75 R
0 1 V
-31 -1 R
62 0 V
stroke 5761 3459 M
-62 1 R
62 0 V
199 52 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
198 38 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
199 27 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
198 22 R
-31 0 R
62 0 V
-62 0 R
62 0 V
198 18 R
-31 0 R
62 0 V
-62 0 R
62 0 V
199 13 R
-31 0 R
62 0 V
-62 0 R
62 0 V
198 11 R
-31 0 R
62 0 V
-62 0 R
62 0 V
199 9 R
-31 0 R
62 0 V
-62 0 R
62 0 V
198 7 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
198 5 R
-31 0 R
62 0 V
-62 0 R
62 0 V
199 5 R
-31 0 R
62 0 V
-62 0 R
62 0 V
198 4 R
-31 0 R
62 0 V
-62 0 R
62 0 V
198 3 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
199 2 R
-31 0 R
62 0 V
-62 0 R
62 0 V
198 3 R
-31 0 R
62 0 V
-62 0 R
62 0 V
199 2 R
-31 0 R
62 0 V
-62 0 R
62 0 V
198 1 R
-31 0 R
62 0 V
-62 0 R
62 0 V
866 643 Pls
976 643 Pls
1087 643 Pls
1197 644 Pls
1307 644 Pls
1417 644 Pls
1528 644 Pls
1638 645 Pls
1748 645 Pls
1858 646 Pls
1969 646 Pls
2079 646 Pls
2189 647 Pls
2300 648 Pls
2410 648 Pls
2520 649 Pls
2630 650 Pls
2741 651 Pls
2851 652 Pls
2961 653 Pls
3071 655 Pls
3182 656 Pls
3292 658 Pls
3402 660 Pls
3512 663 Pls
3623 666 Pls
3733 671 Pls
3843 676 Pls
3954 682 Pls
4064 691 Pls
4174 702 Pls
4293 722 Pls
4323 729 Pls
4353 734 Pls
4383 743 Pls
4414 751 Pls
4444 765 Pls
4474 774 Pls
4504 789 Pls
4534 807 Pls
4565 822 Pls
4595 854 Pls
4625 885 Pls
4655 912 Pls
4685 968 Pls
4716 1044 Pls
4746 1110 Pls
4776 1255 Pls
4806 1439 Pls
4836 1660 Pls
4867 2012 Pls
4897 2403 Pls
4927 2597 Pls
4957 2790 Pls
4987 2894 Pls
5018 2955 Pls
5048 3015 Pls
5078 3056 Pls
5108 3105 Pls
5139 3140 Pls
5169 3177 Pls
5199 3198 Pls
5229 3229 Pls
5259 3248 Pls
5290 3270 Pls
5320 3292 Pls
5350 3312 Pls
5380 3326 Pls
5410 3343 Pls
5441 3358 Pls
5471 3372 Pls
5501 3383 Pls
5730 3459 Pls
5960 3512 Pls
6189 3552 Pls
6419 3580 Pls
6648 3602 Pls
6877 3620 Pls
7107 3633 Pls
7336 3644 Pls
7566 3653 Pls
7795 3660 Pls
8024 3666 Pls
8254 3671 Pls
8483 3675 Pls
8712 3678 Pls
8942 3681 Pls
9171 3684 Pls
9401 3686 Pls
9630 3687 Pls
2145 3564 Pls
% End plot #1
% Begin plot #2
2.200 UL
LT0
LC2 setrgbcolor
780 643 M
86 0 V
110 0 V
111 0 V
110 1 V
110 0 V
110 0 V
111 0 V
110 1 V
110 0 V
110 1 V
111 0 V
110 0 V
110 1 V
111 1 V
110 0 V
110 1 V
110 1 V
111 1 V
110 1 V
110 1 V
110 2 V
111 1 V
110 2 V
110 2 V
110 3 V
111 3 V
110 5 V
110 5 V
111 6 V
110 9 V
110 11 V
119 20 V
30 7 V
30 5 V
30 9 V
31 8 V
30 14 V
30 9 V
30 15 V
30 18 V
31 15 V
30 32 V
30 31 V
30 27 V
30 56 V
31 76 V
30 66 V
30 145 V
30 184 V
30 221 V
31 352 V
30 391 V
30 194 V
30 193 V
30 104 V
31 61 V
30 60 V
30 41 V
30 49 V
31 35 V
30 37 V
30 21 V
30 31 V
30 19 V
31 22 V
30 22 V
30 20 V
30 14 V
30 17 V
31 15 V
30 14 V
30 11 V
229 76 V
230 53 V
229 40 V
230 28 V
229 22 V
229 18 V
230 13 V
229 11 V
230 9 V
229 7 V
229 6 V
230 5 V
229 4 V
229 3 V
230 3 V
229 3 V
230 2 V
229 1 V
213 2 V
% End plot #2
% Begin plot #3
stroke
1.700 UL
LT6
LCa setrgbcolor
LCb setrgbcolor
1740 3364 M
[ [(Symbol) 200.0 0.0 true true 0 (b)]
[(Helvetica) 160.0 -60.0 true true 0 (crit)]
] -46.7 MRshow
LT6
LCa setrgbcolor
1860 3364 M
571 0 V
4897 640 M
0 3087 V
% End plot #3
stroke
1.000 UL
LTb
780 3727 N
780 640 L
9063 0 V
0 3087 V
-9063 0 V
Z stroke
1.450 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Times-Italic Helvetica
