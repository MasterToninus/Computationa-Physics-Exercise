%!PS-Adobe-2.0 EPSF-2.0
%%Title: TauHvsN.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Thu Jun 28 19:20:27 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 475 333
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 7.500 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -83 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (TauHvsN.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (xaceruntu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jun 28 19:20:27 2012)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 475 50 lineto 475 333 lineto 50 333 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 250 scalefont setfont
/Helvetica findfont 250 scalefont setfont
/Helvetica findfont 250 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
975 800 M
7076 0 V
stroke
LTb
975 800 M
63 0 V
stroke
825 800 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 1)]
] -83.3 MRshow
1.000 UL
LTb
975 1258 M
31 0 V
-31 268 R
31 0 V
-31 191 R
31 0 V
-31 147 R
31 0 V
-31 121 R
31 0 V
-31 102 R
31 0 V
-31 88 R
31 0 V
-31 78 R
31 0 V
stroke
LTa
975 1258 M
7076 0 V
stroke
LTb
975 1258 M
63 0 V
stroke
825 1258 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 2)]
] -83.3 MRshow
1.000 UL
LTb
975 1717 M
31 0 V
-31 268 R
31 0 V
-31 190 R
31 0 V
-31 147 R
31 0 V
-31 121 R
31 0 V
-31 102 R
31 0 V
-31 88 R
31 0 V
-31 78 R
31 0 V
stroke
LTa
975 1717 M
7076 0 V
stroke
LTb
975 1717 M
63 0 V
stroke
825 1717 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 4)]
] -83.3 MRshow
1.000 UL
LTb
975 2175 M
31 0 V
-31 268 R
31 0 V
-31 190 R
31 0 V
-31 148 R
31 0 V
-31 120 R
31 0 V
-31 102 R
31 0 V
-31 88 R
31 0 V
-31 78 R
31 0 V
stroke
LTa
975 2175 M
7076 0 V
stroke
LTb
975 2175 M
63 0 V
stroke
825 2175 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 8)]
] -83.3 MRshow
1.000 UL
LTb
975 2633 M
31 0 V
-31 268 R
31 0 V
-31 190 R
31 0 V
-31 148 R
31 0 V
-31 120 R
31 0 V
-31 102 R
31 0 V
-31 89 R
31 0 V
-31 77 R
31 0 V
stroke
LTa
975 2633 M
7076 0 V
stroke
LTb
975 2633 M
63 0 V
stroke
825 2633 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 16)]
] -83.3 MRshow
1.000 UL
LTb
975 3091 M
31 0 V
-31 268 R
31 0 V
-31 191 R
31 0 V
-31 147 R
31 0 V
-31 121 R
31 0 V
-31 102 R
31 0 V
-31 88 R
31 0 V
-31 78 R
31 0 V
stroke
LTa
975 3091 M
7076 0 V
stroke
LTb
975 3091 M
63 0 V
stroke
825 3091 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 32)]
] -83.3 MRshow
1.000 UL
LTb
975 3550 M
31 0 V
-31 268 R
31 0 V
-31 190 R
31 0 V
-31 147 R
31 0 V
-31 121 R
31 0 V
-31 102 R
31 0 V
-31 88 R
31 0 V
-31 78 R
31 0 V
stroke
LTa
975 3550 M
7076 0 V
stroke
LTb
975 3550 M
63 0 V
stroke
825 3550 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 64)]
] -83.3 MRshow
1.000 UL
LTb
975 4008 M
31 0 V
-31 268 R
31 0 V
-31 190 R
31 0 V
-31 148 R
31 0 V
-31 120 R
31 0 V
-31 102 R
31 0 V
-31 88 R
31 0 V
stroke
LTa
975 4008 M
7076 0 V
stroke
LTb
975 4008 M
63 0 V
stroke
825 4008 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 128)]
] -83.3 MRshow
1.000 UL
LTb
975 4466 M
31 0 V
-31 268 R
31 0 V
-31 190 R
31 0 V
stroke
LTa
975 4466 M
150 0 V
2491 0 R
4435 0 V
stroke
LTb
975 4466 M
63 0 V
stroke
825 4466 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 256)]
] -83.3 MRshow
1.000 UL
LTb
975 4924 M
31 0 V
stroke
LTa
975 4924 M
150 0 V
2491 0 R
4435 0 V
stroke
LTb
975 4924 M
63 0 V
stroke
825 4924 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 512)]
] -83.3 MRshow
1.000 UL
LTb
975 800 M
0 31 V
2399 800 M
0 31 V
3409 800 M
0 31 V
784 -31 R
0 31 V
640 -31 R
0 31 V
541 -31 R
0 31 V
469 -31 R
0 31 V
414 -31 R
0 31 V
stroke
LTa
6627 800 M
0 4567 V
stroke
LTb
6627 800 M
0 63 V
stroke
6627 550 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 100)]
] -83.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
975 5367 N
975 800 L
7076 0 V
0 4567 V
-7076 0 V
Z stroke
LCb setrgbcolor
250 3083 M
[ [(Symbol) 250.0 0.0 true true 0 (t)]
] -83.3 MCshow
LTb
LCb setrgbcolor
4513 175 M
[ [(Helvetica) 250.0 0.0 true true 0 (L)]
] -83.3 MCshow
LTb
1.450 UP
1.000 UL
LTb
% Begin plot #1
1.450 UP
1.000 UL
LT0
LCb setrgbcolor
2625 5179 M
[ [(Helvetica) 250.0 0.0 true true 0 (Metropolis)]
] -83.3 MRshow
LT0
8051 4243 Pls
8028 4535 Pls
8004 4276 Pls
7980 4422 Pls
7956 4299 Pls
7932 3767 Pls
7908 4278 Pls
7883 4127 Pls
7859 3996 Pls
7834 4081 Pls
7809 4367 Pls
7784 4332 Pls
7758 4216 Pls
7733 4477 Pls
7707 4358 Pls
7681 4338 Pls
7655 4265 Pls
7629 4279 Pls
7602 4060 Pls
7575 4220 Pls
7548 4018 Pls
7521 3996 Pls
7494 4299 Pls
7466 3856 Pls
7439 4131 Pls
7411 4322 Pls
7383 4090 Pls
7354 4239 Pls
7325 4282 Pls
7297 4119 Pls
7267 4141 Pls
7238 4231 Pls
7208 4068 Pls
7178 4050 Pls
7148 3817 Pls
7118 4291 Pls
7087 4305 Pls
7056 4361 Pls
7025 4084 Pls
6994 4135 Pls
6962 4108 Pls
6930 4105 Pls
6897 3963 Pls
6865 3959 Pls
6832 4079 Pls
6798 3954 Pls
6765 4034 Pls
6731 4168 Pls
6697 3852 Pls
6662 4028 Pls
6627 3734 Pls
6592 4081 Pls
6556 3940 Pls
6520 4065 Pls
6484 3993 Pls
6447 3699 Pls
6410 3817 Pls
6372 3932 Pls
6334 4093 Pls
6296 3916 Pls
6257 3312 Pls
6218 3882 Pls
6178 3683 Pls
6138 4010 Pls
6097 3983 Pls
6056 3716 Pls
6015 3743 Pls
5973 3623 Pls
5930 3667 Pls
5887 4058 Pls
5843 3877 Pls
5799 3812 Pls
5755 3721 Pls
5709 3571 Pls
5663 3659 Pls
5617 3868 Pls
5570 3511 Pls
5522 3549 Pls
5473 3764 Pls
5424 3861 Pls
5374 3831 Pls
5324 3551 Pls
5273 3529 Pls
5221 3729 Pls
5168 3778 Pls
5114 3420 Pls
5060 3675 Pls
5004 3376 Pls
4948 3527 Pls
4891 3517 Pls
4833 3539 Pls
4774 3410 Pls
4714 3555 Pls
4653 3211 Pls
4591 3525 Pls
4528 3357 Pls
4463 3421 Pls
4397 3268 Pls
4331 3402 Pls
4262 3293 Pls
4193 2947 Pls
4122 3179 Pls
4049 3310 Pls
3976 3012 Pls
3900 3314 Pls
3823 3273 Pls
3744 3066 Pls
3663 3054 Pls
3581 2897 Pls
3496 3126 Pls
3409 2908 Pls
3320 3004 Pls
3229 2852 Pls
3135 2848 Pls
3039 2957 Pls
2940 2735 Pls
2838 2861 Pls
2734 2769 Pls
2626 2574 Pls
2514 2729 Pls
2399 2672 Pls
2280 2801 Pls
2157 2755 Pls
2029 2790 Pls
1896 2247 Pls
1759 2270 Pls
1615 2442 Pls
1466 2350 Pls
1310 2433 Pls
1146 2163 Pls
975 2391 Pls
3120 5179 Pls
% End plot #1
% Begin plot #2
1.450 UP
1.000 UL
LT1
LCb setrgbcolor
2625 4929 M
[ [(Helvetica) 250.0 0.0 true true 0 (Swen.-Wang)]
] -83.3 MRshow
LT1
8051 2431 Crs
8028 2125 Crs
8004 1902 Crs
7980 1853 Crs
7956 2005 Crs
7932 1964 Crs
7908 2045 Crs
7883 2160 Crs
7859 1904 Crs
7834 1921 Crs
7809 1717 Crs
7784 1979 Crs
7758 1907 Crs
7733 1817 Crs
7707 2008 Crs
7681 1610 Crs
7655 1908 Crs
7629 1636 Crs
7602 1954 Crs
7575 2009 Crs
7548 2162 Crs
7521 1483 Crs
7494 1843 Crs
7466 2317 Crs
7439 2307 Crs
7411 1846 Crs
7383 2080 Crs
7354 1818 Crs
7325 1906 Crs
7297 1970 Crs
7267 2262 Crs
7238 2186 Crs
7208 2113 Crs
7178 1830 Crs
7148 1825 Crs
7118 1740 Crs
7087 2396 Crs
7056 1959 Crs
7025 1769 Crs
6994 2113 Crs
6962 2255 Crs
6930 1924 Crs
6897 2335 Crs
6865 1928 Crs
6832 1755 Crs
6798 1863 Crs
6765 1464 Crs
6731 1784 Crs
6697 1934 Crs
6662 1829 Crs
6627 2102 Crs
6592 2135 Crs
6556 1944 Crs
6520 1941 Crs
6484 1834 Crs
6447 1936 Crs
6410 2114 Crs
6372 1794 Crs
6334 1863 Crs
6296 2042 Crs
6257 1924 Crs
6218 2154 Crs
6178 2173 Crs
6138 1911 Crs
6097 1682 Crs
6056 1904 Crs
6015 1973 Crs
5973 1564 Crs
5930 2022 Crs
5887 1762 Crs
5843 2024 Crs
5799 1821 Crs
5755 1944 Crs
5709 1819 Crs
5663 1913 Crs
5617 1907 Crs
5570 2109 Crs
5522 1965 Crs
5473 1703 Crs
5424 2063 Crs
5374 1789 Crs
3120 4929 Crs
% End plot #2
% Begin plot #3
1.000 UL
LT2
/Helvetica findfont 250 scalefont setfont
LCb setrgbcolor
2625 4679 M
(f\(x\)) Rshow
LT2
2775 4679 M
691 0 V
975 1864 M
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 26 V
72 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
72 26 V
71 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 26 V
72 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
71 26 V
72 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
72 26 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 26 V
72 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
72 26 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
72 26 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
72 27 V
71 27 V
72 26 V
71 27 V
% End plot #3
% Begin plot #4
stroke
LT3
/Helvetica findfont 250 scalefont setfont
LCb setrgbcolor
2625 4429 M
(g\(x\)) Rshow
LT3
2775 4429 M
691 0 V
975 1734 M
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 2 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 2 V
71 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 2 V
72 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 2 V
71 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 2 V
72 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 2 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 2 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 2 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 2 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
72 3 V
71 3 V
% End plot #4
stroke
LTb
975 5367 N
975 800 L
7076 0 V
0 4567 V
-7076 0 V
Z stroke
1.450 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
